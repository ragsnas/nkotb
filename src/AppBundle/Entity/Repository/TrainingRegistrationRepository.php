<?php

namespace AppBundle\Entity\Repository;

use AppBundle\Entity\TrainingRegistration;
use AppBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * TrainingRegistrationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrainingRegistrationRepository extends EntityRepository
{
    public function storeTrainingRegistration(TrainingRegistration $trainingRegistration)
    {
        $this->getEntityManager()->persist($trainingRegistration);
        $this->getEntityManager()->flush($trainingRegistration);
    }

    public function removeTrainingRegistration(TrainingRegistration $trainingRegistration)
    {
        $this->getEntityManager()->remove($trainingRegistration);
        $this->getEntityManager()->flush($trainingRegistration);
    }

    public function getRegistrationForTrainingAndUser($trainingId, User $user)
    {
        $qb = $this->createQueryBuilder('tr');
        $qb->leftJoin('tr.training', 't')->addSelect('t')
            ->leftJoin('tr.user', 'u')->addSelect('u')
            ->where('t.id = :trainingId')
            ->andWhere('u.id = :userId')
            ->setParameter(':trainingId', $trainingId)
            ->setParameter(':userId', $user->getId());
        return $qb;
    }

    public function getRegistrationsOrderedByDateDescending()
    {
        $qb = $this->createQueryBuilder('tr');
        $qb->leftJoin('tr.training', 't')->addSelect('t')
            ->leftJoin('tr.user', 'u')->addSelect('u')
            ->orderBy('t.start', 'DESC');
        return $qb;
    }

    public function getRegistrationsForSingleTraining($trainingId)
    {
        $qb = $this->createQueryBuilder('tr');
        $qb->leftJoin('tr.training', 't')->addSelect('t')
            ->leftJoin('tr.user', 'u')->addSelect('u')
            ->where('t.id = :trainingId')
            ->setParameter(':trainingId', $trainingId);
        return $qb;
    }
}
